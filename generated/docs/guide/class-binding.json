{
  "id": "guide/class-binding",
  "title": "Class and style binding",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/guide/class-binding.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"class-and-style-binding\" translation-result=\"on\">类和样式绑定<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#class-and-style-binding\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"class-and-style-binding\">Class and style binding<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#class-and-style-binding\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">使用类和样式绑定从元素的 <code>class</code> 属性中添加和删除 CSS 类名，以及动态设置样式。</p><p translation-origin=\"off\">Use class and style bindings to add and remove CSS class names from an element's <code>class</code> attribute and to set styles dynamically.</p>\n\n<h2 id=\"prerequisites\" translation-result=\"on\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisites\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/property-binding\">property 绑定</a></p><p translation-origin=\"off\"><a href=\"guide/property-binding\">Property binding</a></p>\n\n</li>\n</ul>\n<h2 id=\"binding-to-a-single-css-class\" translation-result=\"on\">绑定到单个 CSS <code>class</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-a-single-css-class\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"binding-to-a-single-css-class\">Binding to a single CSS <code>class</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-a-single-css-class\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要创建单个类绑定，请键入以下内容：</p><p translation-origin=\"off\">To create a single class binding, type the following:</p>\n\n<p><code>[class.sale]=\"onSale\"</code></p>\n<p translation-result=\"on\">当绑定表达式 <code>onSale</code> 为真值时，Angular 会添加类，当表达式为假值时，它会删除类 —— <code>undefined</code> 除外。有关更多信息，参阅<a href=\"guide/style-precedence#styling-delegation\">样式委托</a>。</p><p translation-origin=\"off\">Angular adds the class when the bound expression, <code>onSale</code> is truthy, and it removes the class when the expression is falsy—with the exception of <code>undefined</code>. See <a href=\"guide/style-precedence#styling-delegation\">styling delegation</a> for more information.</p>\n\n<h2 id=\"binding-to-multiple-css-classes\" translation-result=\"on\">绑定到多个 CSS 类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-multiple-css-classes\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"binding-to-multiple-css-classes\">Binding to multiple CSS classes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-multiple-css-classes\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要绑定到多个类，请键入以下内容：</p><p translation-origin=\"off\">To bind to multiple classes, type the following:</p>\n\n<p><code>[class]=\"classExpression\"</code></p>\n<p translation-result=\"on\">表达式可以是以下之一：</p><p translation-origin=\"off\">The expression can be one of:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">用空格分隔的类名字符串。</p><p translation-origin=\"off\">A space-delimited string of class names.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">以类名作为键名并将真或假表达式作为值的对象。</p><p translation-origin=\"off\">An object with class names as the keys and truthy or falsy expressions as the values.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">类名的数组。</p><p translation-origin=\"off\">An array of class names.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">对于对象格式，Angular 会在其关联的值为真时才添加类。</p><p translation-origin=\"off\">With the object format, Angular adds a class only if its associated value is truthy.</p>\n\n<div class=\"alert is-important\">\n<p translation-result=\"on\">对于任何类似对象的表达式（比如 <code>object</code>、<code>Array</code>、<code>Map</code> 或 <code>Set</code>，必须更改对象的引用，Angular 才能更新类列表。在不更改对象引用的情况下只更新其 Attribute 是不会生效的。</p><p translation-origin=\"off\">With any object-like expression—such as <code>object</code>, <code>Array</code>, <code>Map</code>, or <code>Set</code>—the identity of the object must change for Angular to update the class list.\nUpdating the property without changing object identity has no effect.</p>\n\n</div>\n<p translation-result=\"on\">如果同一类名有多个绑定，Angular 会根据<a href=\"guide/style-precedence\">样式优先级</a>来确定要使用的绑定。</p><p translation-origin=\"off\">If there are multiple bindings to the same class name, Angular uses <a href=\"guide/style-precedence\">styling precedence</a> to determine which binding to use.</p>\n\n<p translation-result=\"on\">下表是各种类绑定语法的小结。</p><p translation-origin=\"off\">The following table summarizes class binding syntax.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><p translation-result=\"on\">绑定类型</p><p translation-origin=\"off\">Binding Type</p></th>\n<th align=\"left\"><p translation-result=\"on\">语法</p><p translation-origin=\"off\">Syntax</p></th>\n<th align=\"left\"><p translation-result=\"on\">输入属性</p><p translation-origin=\"off\">Input Type</p></th>\n<th align=\"left\"><p translation-result=\"on\">范例输入值</p><p translation-origin=\"off\">Example Input Values</p></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">单一类绑定</p><p translation-origin=\"off\">Single class binding</p></td>\n<td align=\"left\"><code>[class.sale]=\"onSale\"</code></td>\n<td align=\"left\"><code>boolean | undefined | null</code></td>\n<td align=\"left\"><code>true</code>, <code>false</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">多重类绑定</p><p translation-origin=\"off\">Multi-class binding</p></td>\n<td align=\"left\"><code>[class]=\"classExpression\"</code></td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\"><code>\"my-class-1 my-class-2 my-class-3\"</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">多重类绑定</p><p translation-origin=\"off\">Multi-class binding</p></td>\n<td align=\"left\"><code>[class]=\"classExpression\"</code></td>\n<td align=\"left\"><code>Record&#x3C;string, boolean | undefined | null></code></td>\n<td align=\"left\"><code>{foo: true, bar: false}</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">多重类绑定</p><p translation-origin=\"off\">Multi-class binding</p></td>\n<td align=\"left\"><code>[class]=\"classExpression\"</code></td>\n<td align=\"left\"><code>Array&#x3C;string></code></td>\n<td align=\"left\"><code>['foo', 'bar']</code></td>\n</tr>\n\n</tbody>\n</table>\n<h2 id=\"binding-to-a-single-style\" translation-result=\"on\">绑定到单一样式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-a-single-style\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"binding-to-a-single-style\">Binding to a single style<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-a-single-style\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要创建单个样式绑定，请使用 <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a></code> 前缀，后跟一个点和 CSS 样式的名称。</p><p translation-origin=\"off\">To create a single style binding, use the prefix <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a></code> followed by a dot and the name of the CSS style.</p>\n\n<p translation-result=\"on\">比如，设置 'width' 样式，键入以下内容：<code>[style.width]=\"width\"</code></p><p translation-origin=\"off\">For example, set the ‘width’ style, type the following:  <code>[style.width]=\"width\"</code></p>\n\n<p translation-result=\"on\">Angular 将该属性设置为绑定表达式的值，这通常是一个字符串。（可选）你可以添加单位扩展名，比如 <code>em</code> 或 <code>%</code>，这需要数字类型。</p><p translation-origin=\"off\">Angular sets the property to the value of the bound expression, which is usually a string. Optionally, you can add a unit extension like <code>em</code> or <code>%</code>, which requires a number type.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">要以中线格式（dash-case）编写样式，请键入以下内容：</p><p translation-origin=\"off\">To write a style in dash-case, type the following:</p>\n\n<code-example language=\"html\">&#x3C;nav [style.background-color]=\"expression\">&#x3C;/nav></code-example>\n</li>\n<li>\n<p translation-result=\"on\">要以驼峰格式（camelCase）编写样式，请键入以下内容：</p><p translation-origin=\"off\">To write a style in camelCase, type the following:</p>\n\n<code-example language=\"html\">&#x3C;nav [style.backgroundColor]=\"expression\">&#x3C;/nav></code-example>\n</li>\n</ol>\n<h2 id=\"binding-to-multiple-styles\" translation-result=\"on\">绑定到多个样式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-multiple-styles\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"binding-to-multiple-styles\">Binding to multiple styles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#binding-to-multiple-styles\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要切换多个样式，请绑定到 <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> Attribute，比如 <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"</code>。<code>styleExpression</code> 可以是如下格式之一：</p><p translation-origin=\"off\">To toggle multiple styles, bind to the <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> attribute—for example, <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"</code>. The <code>styleExpression</code> can be one of:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">样式的字符串列表，比如 <code>\"width: 100px; height: 100px; background-color: cornflowerblue;\"</code>。</p><p translation-origin=\"off\">A string list of styles such as <code>\"width: 100px; height: 100px; background-color: cornflowerblue;\"</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一个对象，其键名是样式名，其值是样式值，比如 <code>{width: '100px', height: '100px', backgroundColor: 'cornflowerblue'}</code>。</p><p translation-origin=\"off\">An object with style names as the keys and style values as the values, such as <code>{width: '100px', height: '100px', backgroundColor: 'cornflowerblue'}</code>.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">注意，不支持把数组绑定给 <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code>。</p><p translation-origin=\"off\">Note that binding an array to <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> is not supported.</p>\n\n<div class=\"alert is-important\">\n<p translation-result=\"on\">当把 <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> 绑定到对象表达式时，该对象的引用必须改变，这样 Angular 才能更新这个类列表。在不改变对象引用的情况下更新其属性值是不会生效的。</p><p translation-origin=\"off\">When binding <code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]</code> to an object expression, the identity of the object must change for Angular to update the class list.\nUpdating the property without changing object identity has no effect.</p>\n\n</div>\n<h3 id=\"single-and-multiple-style-binding-example\" translation-result=\"on\">单样式和多样式绑定示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#single-and-multiple-style-binding-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"single-and-multiple-style-binding-example\">Single and multiple-style binding example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#single-and-multiple-style-binding-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example path=\"attribute-binding/src/app/single-and-multiple-style-binding.component.ts\" header=\"nav-bar.component.ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-nav-bar',\n  template: `\n&#x3C;nav [<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]='navStyle'>\n  &#x3C;a [style.text-decoration]=\"activeLinkStyle\">Home Page&#x3C;/a>\n  &#x3C;a [style.text-decoration]=\"linkStyle\">Login&#x3C;/a>\n&#x3C;/nav>`\n})\nexport class NavBarComponent {\n  navStyle = 'font-size: 1.2rem; color: cornflowerblue;';\n  linkStyle = 'underline';\n  activeLinkStyle = 'overline';\n  /* . . . */\n}\n\n\n</code-example>\n<p translation-result=\"on\">如果同一个样式 Attribute 有多个绑定，Angular 将使用<a href=\"guide/style-precedence\">样式优先级</a>来确定要使用的绑定。</p><p translation-origin=\"off\">If there are multiple bindings to the same style attribute, Angular uses <a href=\"guide/style-precedence\">styling precedence</a> to determine which binding to use.</p>\n\n<p translation-result=\"on\">下表是各种样式绑定语法的小结。</p><p translation-origin=\"off\">The following table summarizes style binding syntax.</p>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\"><p translation-result=\"on\">绑定类型</p><p translation-origin=\"off\">Binding Type</p></th>\n<th align=\"left\"><p translation-result=\"on\">语法</p><p translation-origin=\"off\">Syntax</p></th>\n<th align=\"left\"><p translation-result=\"on\">输入属性</p><p translation-origin=\"off\">Input Type</p></th>\n<th align=\"left\"><p translation-result=\"on\">范例输入值</p><p translation-origin=\"off\">Example Input Values</p></th>\n</tr>\n</thead>\n<tbody>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">单一样式绑定</p><p translation-origin=\"off\">Single style binding</p></td>\n<td align=\"left\"><code>[style.width]=\"width\"</code></td>\n<td align=\"left\"><code>string | undefined | null</code></td>\n<td align=\"left\"><code>\"100px\"</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">带单位的单一样式绑定</p><p translation-origin=\"off\">Single style binding with units</p></td>\n<td align=\"left\"><code>[style.width.px]=\"width\"</code></td>\n<td align=\"left\"><code>number | undefined | null</code></td>\n<td align=\"left\"><code>100</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">多重样式绑定</p><p translation-origin=\"off\">Multi-style binding</p></td>\n<td align=\"left\"><code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"</code></td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\"><code>\"width: 100px; height: 100px\"</code></td>\n</tr>\n\n<tr>\n<td align=\"left\"><p translation-result=\"on\">多重样式绑定</p><p translation-origin=\"off\">Multi-style binding</p></td>\n<td align=\"left\"><code>[<a href=\"api/animations/style\" class=\"code-anchor\">style</a>]=\"styleExpression\"</code></td>\n<td align=\"left\"><code>Record&#x3C;string, string | undefined | null></code></td>\n<td align=\"left\"><code>{width: '100px', height: '100px'}</code></td>\n</tr>\n\n</tbody>\n</table>\n<a id=\"styling-precedence\"></a>\n<h2 id=\"styling-precedence\" translation-result=\"on\">样式优先级<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#styling-precedence\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"styling-precedence\">Styling precedence<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#styling-precedence\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">一个 HTML 元素可以将其 CSS 类列表和样式值绑定到多个源（比如，来自多个指令的宿主绑定）。</p><p translation-origin=\"off\">A single HTML element can have its CSS class list and style values bound to multiple sources (for example, host bindings from multiple directives).</p>\n\n<h2 id=\"whats-next\" translation-result=\"on\">下一步呢？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"whats-next\">What’s next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/class-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"https://angular.io/guide/component-styles\">组件样式</a></p><p translation-origin=\"off\"><a href=\"https://angular.io/guide/component-styles\">Component styles</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://angular.io/guide/animations\">Angular 动画介绍</a></p><p translation-origin=\"off\"><a href=\"https://angular.io/guide/animations\">Introduction to Angular animations</a></p>\n\n</li>\n</ul>\n\n  <div class=\"reviewed\">最后复查时间： 5/9/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/ajs-quick-reference\n - guide/attribute-binding\n - guide/built-in-directives\n - guide/glossary\n - guide/property-binding\n - guide/router-tutorial-toh\n - guide/template-overview\n - tutorial/toh-pt2\n-->\n<!-- links from this doc:\n - api/animations/style\n - api/core/Component\n - guide/class-binding#binding-to-a-single-css-class\n - guide/class-binding#binding-to-a-single-style\n - guide/class-binding#binding-to-multiple-css-classes\n - guide/class-binding#binding-to-multiple-styles\n - guide/class-binding#class-and-style-binding\n - guide/class-binding#prerequisites\n - guide/class-binding#single-and-multiple-style-binding-example\n - guide/class-binding#styling-precedence\n - guide/class-binding#whats-next\n - guide/property-binding\n - guide/style-precedence\n - guide/style-precedence#styling-delegation\n - https://angular.io/guide/animations\n - https://angular.io/guide/component-styles\n - https://github.com/angular/angular-cn/edit/aio/aio/content/guide/class-binding.md?message=docs%3A%20请简述你的修改...\n-->"
}